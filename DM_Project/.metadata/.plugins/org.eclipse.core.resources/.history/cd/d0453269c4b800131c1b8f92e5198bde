package frequentPattern;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.HashMap;


public class AssociationRule {
	
	ItemSet setAB;
	double countAB;
	ItemSet setA;
	double countA;
	ItemSet setB;
	double countB;
	double confidence = 0;
	double lift = 0;
	
	public AssociationRule(ItemSet setAB, double countAB, ItemSet setA, double countA, ItemSet setB, double countB, double total){
		this.setAB = setAB;
		this.setA = setA;
		this.setB = setB;
		this.countAB = countAB/total;
		this.countA = countA/total;
		this.countB = countB/total;
		confidence = this.countAB / this.countA;
		lift = confidence / this.countB;
	}

	public String toString(){
		String result = this.setAB+": Confidence("+this.setA+" => "+this.setB+") = ";
		result += new BigDecimal(this.countAB).setScale(3,RoundingMode.HALF_UP).doubleValue() + "/";
		result += new BigDecimal(this.countA).setScale(3,RoundingMode.HALF_UP).doubleValue() + " = ";
		result += new BigDecimal(confidence).setScale(3,RoundingMode.HALF_UP).doubleValue();
		result += "\tLift: "+ new BigDecimal(this.countAB).setScale(3,RoundingMode.HALF_UP).doubleValue(); 
		result += "/ (" + new BigDecimal(this.countA).setScale(3,RoundingMode.HALF_UP).doubleValue();
		result += "*" + new BigDecimal(this.countB).setScale(3,RoundingMode.HALF_UP).doubleValue() +") = ";
		result += new BigDecimal(lift).setScale(3,RoundingMode.HALF_UP).doubleValue();
		return result;
	}

	/**
	 * 
	 * @param translationList
	 * @return
	 */
	public char[] toString(HashMap<String, Integer> translationList) {
		String result = this.setAB+": Confidence("+this.setA+" => "+this.setB+") = ";
		result += new BigDecimal(this.countAB).setScale(3,RoundingMode.HALF_UP).doubleValue() + "/";
		result += new BigDecimal(this.countA).setScale(3,RoundingMode.HALF_UP).doubleValue() + " = ";
		result += new BigDecimal(confidence).setScale(3,RoundingMode.HALF_UP).doubleValue();
		result += "\tLift: "+ new BigDecimal(this.countAB).setScale(3,RoundingMode.HALF_UP).doubleValue(); 
		result += "/ (" + new BigDecimal(this.countA).setScale(3,RoundingMode.HALF_UP).doubleValue();
		result += "*" + new BigDecimal(this.countB).setScale(3,RoundingMode.HALF_UP).doubleValue() +") = ";
		result += new BigDecimal(lift).setScale(3,RoundingMode.HALF_UP).doubleValue();
		return result;
	}
}
