package clustering.data;

import java.util.ArrayList;
import java.util.HashMap;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

import clustering.kMean.KMeanCluster;
import data.DataResolver;
import data.FavAnimal;
import data.FavColor;
import data.FavSQLServ;
import data.OS;
import data.ProgLangs;


public class Survey2014 implements Item {

	/**
	 * The attribute to built a classifier for.
	 */
	private float s2014_prog_skill;
	private float s2014_uni_yrs;
	
	public Survey2014(float s2014_prog_skill, float s2014_uni_yrs)
	{
		this.s2014_prog_skill = s2014_prog_skill;
		this.s2014_uni_yrs = s2014_uni_yrs;
	}
	
	@Override
	public String toString() {
		String result = "Survey2014 Object -->"+
				" | Prog_Skill = "+this.s2014_prog_skill+
				" | Uni_yrs = "+this.s2014_uni_yrs
				;
		return result;
	}

	@Override
	public int compareTo(Item obj) {
		Survey2014 survey2014_obj = (Survey2014)obj;
		if (
			this.s2014_prog_skill==survey2014_obj.s2014_prog_skill && 
			this.s2014_uni_yrs==survey2014_obj.s2014_uni_yrs
		)
			return 1;
		else
			return 0;
	}

	@Override
	public float distance(Item obj) {
		float prog_skill = 0;
		float uni_yrs = 0;
		if (obj!=null){
			Survey2014 survey2014_obj = (Survey2014)obj;
			prog_skill = survey2014_obj.s2014_prog_skill;
			uni_yrs = survey2014_obj.s2014_uni_yrs;
		}
		
		float distance = 0;
		distance += Math.pow(this.s2014_prog_skill-prog_skill,2);
		distance += Math.pow(this.s2014_uni_yrs-uni_yrs,2);
		return distance;
	}

	@Override
	public Item mean(ArrayList<Item> clusterMembers) {
		int size = clusterMembers.size();
		float s2014_prog_skill = 0;
		float s2014_uni_yrs = 0;
		for (Item item: clusterMembers){
			Survey2014 survey2014_obj = (Survey2014)item;
			s2014_prog_skill += survey2014_obj.s2014_prog_skill;
			s2014_uni_yrs += survey2014_obj.s2014_uni_yrs;
		}
		return new Survey2014(s2014_prog_skill/size,s2014_uni_yrs/size);
	}
	
	@Override
	public void drawChart(ArrayList<KMeanCluster> clusters, int k){
		XYSeriesCollection dots = new XYSeriesCollection();
		for (int i = 0; i<k; i++){
			ArrayList<Item> clusterMembers = clusters.get(i).ClusterMembers;
			XYSeries series = new XYSeries("Cluster "+(i+1));
			for (Item item: clusterMembers){
				Survey2014 survey2014_obj = (Survey2014)item;
				double x = survey2014_obj.s2014_uni_yrs;
			    double y = survey2014_obj.s2014_prog_skill;
			    series.add(x,y);
			}
			
			dots.addSeries(series);
		}
		
        JFreeChart chart = ChartFactory.createScatterPlot(
                "Scatter Plot", // chart title
                "University years", // x axis label
                "Programming Skill", // y axis label
                dots, // data
                PlotOrientation.VERTICAL,
                true, // include legend
                true, // tooltips
                false // urls
                );

        // create and display a frame...
        ChartFrame frame = new ChartFrame("Survey2014_Clustering", chart);
        frame.pack();
        frame.setVisible(true);
	}

}
