import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;

import preprocessing.CSVFileReader;
import preprocessing.DataCleaner_Survey2014;
import preprocessing.IDataCleaner;
import supervisedLearning.data.Class_Label;
import supervisedLearning.data.DataManager_Survey2014;
import supervisedLearning.id3.GraphPrinter;
import supervisedLearning.id3.ID3Algorithm;
import supervisedLearning.id3.ID3Object;
import supervisedLearning.id3.Node;


public class Main {

	public static void main(String[] args) throws Exception {
		
		try {
			String[][] data = CSVFileReader.read("data_mining_2014_dataset.csv", false);
			System.out.println("lines total: " + data.length);
			IDataCleaner dataCleaner = new DataCleaner_Survey2014(data);
			//DataReader dataReader = new DataReader();
			
			//data = dataReader.getData(data,0,25, DataReader.Operator.GREATERTHAN);
			//data = dataReader.getData(data,"-",DataReader.Operator.EQUALS);
			//System.out.println("lines: " + data.length);
			//String[] values = dataCleaner.getValues(data, 5, 1);
			
			System.out.println("------------------------------------------------------------------");
			System.out.println("DATA");
			System.out.println("------------------------------------------------------------------");
			int counter = 0;
			for (String[] line : data) {
				System.out.println("Line "+counter+": "+Arrays.toString(line));
				counter++;
			}
			System.out.println("------------------------------------------------------------------");

			data = dataCleaner.clean(data, 4);
			
			System.out.println("------------------------------------------------------------------");
			System.out.println("CLEANED DATA");
			System.out.println("------------------------------------------------------------------");
			counter = 0;
			for (String[] line : data) {
				System.out.println("Line "+counter+": "+Arrays.toString(line));
				counter++;
			}
			System.out.println("------------------------------------------------------------------");
			
			ArrayList<ID3Object> survey2014 = DataManager_Survey2014.LoadData(data);
			System.out.println("DataManager loaded "+survey2014.size() + " items\n");
			
			System.out.println("================================================");
			System.out.println("ID3 Algorithm");
			System.out.println("================================================");
			boolean loop = true;
			ID3(survey2014,23);
			
		} catch (IOException e) {
			System.err.println(e.getLocalizedMessage());
		}

	}
	
	/**
	 * 
	 * @param mushrooms
	 * @param sizeOfTestSet
	 * @throws Exception 
	 */
	private static void ID3(ArrayList<ID3Object> mushrooms, int sizeOfTestSet) throws Exception{
		//Size of Testset; Testset is picked from the mushroom objects
		ArrayList<ID3Object> testSet = new ArrayList<ID3Object>();
		for (int i = 0; i < sizeOfTestSet; i++){
			testSet.add(mushrooms.get(i));
		}
		
		ID3Algorithm id3 = new ID3Algorithm();
		Node decisionTree = id3.generateDecisionTree(testSet,"s2014_Class","");
	    
	    try {
		    GraphPrinter graphPrinter = new GraphPrinter("C:\\Program Files (x86)\\Graphviz2.36\\bin","png",".\\results");
		    graphPrinter.createAutomatGraphViz("result_"+sizeOfTestSet+"_"+new SimpleDateFormat("yyyyMMdd").format(new Date()), decisionTree);
	    }
	    catch (Exception e){
	    	System.out.println("ERROR: "+e.getMessage());
	    }
		
		double result = id3.testData(decisionTree, mushrooms);
		
		System.out.println("\nTestSet:\t"+testSet.size() + " items");
		System.out.println("Accurancy:\t" + result);
	}

}
